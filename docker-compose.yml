version: '3.3'

services:

    mysql:
        image: mysql:latest
        container_name: artMySQL
        restart: unless-stopped
        env_file: .env
        volumes:
            - ./data/mysql:/var/lib/mysql
        networks:
            - artnet

    web:
        build: .
        container_name: artApp
        restart: unless-stopped
        env_file: .env
        command: gunicorn --forwarded-allow-ips=* --bind 0.0.0.0:8000 -w 2 project.wsgi:application
        depends_on:
            - mysql
#            - rabbit
        volumes:
            - .:/app
#        ports:
#            - "8000:8000"
        networks:
            - artnet

    nginx:
        image: nginx:1.23-alpine
        container_name: artNginx
        restart: unless-stopped
        env_file: .env
        ports:
            - "80:80"
            - "443:443"
        command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
        depends_on:
            - web
        volumes:
            - ./data/nginx/nginx${STATE}.conf:/etc/nginx/nginx.conf
            - ./data/nginx/conf.d:/etc/nginx/conf.d
            - .:/app
            - ./data/certbot/conf:/etc/letsencrypt
            - ./data/certbot/www:/var/www/certbot
        networks:
            - artnet

    certbot:
        image: certbot/certbot
        container_name: artCertbot
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
        volumes:
            - ./data/certbot/conf:/etc/letsencrypt
            - ./data/certbot/www:/var/www/certbot
        networks:
            - artnet

    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: artPhpMyAdmin
        restart: "no"
        environment:
            PMA_ARBITRARY: 1
            PMA_HOST: mysql
        ports:
            - "8080:80"
        depends_on:
            - mysql
        networks:
            - artnet

    rabbit:
        image: rabbitmq:3.11-management
        container_name: artRabbitMQ
        restart: unless-stopped
        env_file: .env
        ports:
#            - "5672:5672"
            - "15672:15672"
        networks:
            - artnet

    redis:
        container_name: artRedis
        image: redis:6-alpine
        env_file: .env
        restart: unless-stopped
        networks:
            - artnet

    celery:
        build: .
        container_name: artCelery
        restart: unless-stopped
        env_file: .env
        working_dir: /app
        command: celery --app=project --broker=${CELERY_BROKER_URL} worker --loglevel=info --logfile=data/celery/celery.log
# Redis
#        command: celery --app=project --broker=${CELERY_BROKER_URL} --result-backend=${CELERY_RESULT_BACKEND} worker --loglevel=info --logfile=data/celery/celery.log
        depends_on:
            - rabbit
            - redis
            - web
        volumes:
            - .:/app
        networks:
            - artnet

    flower:
        build: . 
        container_name: artFlower
        restart: unless-stopped
        env_file: .env
        working_dir: /app
        command: celery --app=project --broker=${CELERY_BROKER_URL} flower --logfile=data/celery/flower.log
        ports:
            - 5555:5555
        depends_on:
            - rabbit
            - redis
            - web
            - celery
        volumes:
            - .:/app
        networks:
            - artnet


networks:
    artnet:
        driver: bridge
